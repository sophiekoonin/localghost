.header {
  grid-area: header;

  padding: 0;

  @media (min-width: $tablet) {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
  }

  img {
    border: 0;
    box-shadow: none;
    max-width: 150px;
  }

  a {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-decoration: none;
  }

  .logo {
    grid-column: 2/2;
    position: relative;

    .header-text {
      font-size: 4rem;
      line-height: 1.2;
      font-family: 'VT323', monospace;
      text-transform: lowercase;
      margin: 0;

      @media screen and (min-width: $tablet) {
        font-size: 5rem;
        text-align: center;
      }
    }

    #ghost {
      -webkit-appearance: none;
      border: 0;
      background: none;
      svg {
        transform: rotate(-45deg);
        fill-rule: evenodd;
        clip-rule: evenodd;
        stroke-linecap: round;
        stroke-linejoin: round;
      }
      position: absolute;
      right: 10px;
      top: 0;
      @media screen and (min-width: $tablet) {
        right: 35px;
      }
    }
  }
}

.haunt {
  animation: haunt 3s ease-in-out;
}

.typewriter {
  display: inline-block;
}

.typewriter-text {
  display: inline-block;
  overflow: hidden;
  letter-spacing: 2px;
  animation: typing 5s steps(30, end), blink 0.75s step-end infinite;
  white-space: nowrap;
  font-size: 30px;
  font-weight: 700;
  border-right: 4px solid orange;
  box-sizing: border-box;
}

.filterwrapper {
  position: absolute;
  z-index: -1;
  pointer-events: none;
  opacity: 0;
}

.glitch-filter {
  display: block;
  position: relative;
  text-align: center;
  margin: 0;
  min-width: 490px;
}

.glitch-filter-example__heading {
  margin: 0;
  margin-bottom: 1em;
  padding: 0;
  display: block;
  position: relative;
}

.glitch-filter-text {
  filter: url(#filter);
  fill: $mid-purple;
  font-size: 100px;
  text-align: center;
  margin: 0;
  padding: 0;
  display: block;
}

@mixin createRandomKeyframes($numberOfKeys) {
  $delta: round(100 / $numberOfKeys);

  @for $i from 1 through $numberOfKeys {
    $time: ($i * $delta - random($delta)) +'%';
    #{$time} {
      stroke-width: random(200) + px;
    }
  }
}

.top-r,
.bot-r,
.top-g,
.bot-g {
  stroke: #ffffff;
}

@keyframes topani {
  @include createRandomKeyframes(10 + random(5));
}

@keyframes botani {
  @include createRandomKeyframes(10 + random(5));
}


.top-r {
  stroke-width: 100px;
  animation: topani 2.75s linear 1s;
}

.bot-r {
  stroke-width: 100px;
  animation: botani 2.5s linear 1s;
}

.top-g {
  stroke-width: 50px;
  animation: topani 2.5s linear reverse 1s;
}

.bot-g {
  stroke-width: 50%;
  animation: botani 2s linear reverse 1s;
}
